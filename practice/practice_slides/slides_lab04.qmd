---
title: "Lab 4:Mapping causal & predictive approaches"
subtitle: "<span style='font-size:2em;'> Practice session</span>"
#author: "Luisa M. Mimmi | [https://luisamimmi.org/](https://luisamimmi.org/)"
author: "<span style='font-size:1.3em; font-weight: bold; color:#77501a'> Luisa M. Mimmi — &ensp;</span>  <a href='https://luisamimmi.org/' style='color:#72aed8; font-weight:600; font-size:1.3em;'>https://luisamimmi.org/</a>"
date: today
date-format: long
code-link: true
format:
  revealjs:
    math: mathjax
    smaller: true
    scrollable: true
    theme: ../../theme/slidesMine.scss # QUARTO LOOKS IN SAME FOLDER 
#    logo: imgs_slides/mitgest_logo.png
    footer: '[R 4 Statistics]({{< var websites.live_site >}}) | 2024'
#    footer: <https://lulliter.github.io/R4biostats/lectures.html>
## ------------- x salvare come PDF 
    standalone: false
    ## -------Produce a standalone HTML file with no external dependencies,
    embed-resources: true
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
    slide-number: true
    fig-cap-location: top
    # fig-format: svg
    pdf-separate-fragments: false
    # fig-align: center
execute:
  # Quarto pre code blocks do not echo their source code by default
  echo: true
  include: true
  freeze: auto
bibliography: ../../bib/R4biostats.bib
csl: ../../bib/apa-6th-edition.csl 
suppress-bibliography: true
---


```{r}
#| echo: FALSE

# set data dir, data used   -----------------------------------------------------------
data_in <- fs::path(here::here("practice","data_input", "04_datasets", "Gabor"))

# load theme and functions
#source( here::here(data_in ,"helper.R"))
options(digits = 3)


# Functions for saving plots -----------------------------------------------------------
f_save_plot <- function(plot_name, plot_object) {
   # Print the plot, save as PDF and PNG
   plot_object %T>%
      print() %T>%
      ggsave(., filename = here("practice", "practice_slides", "figures", paste0(plot_name, ".pdf")),
             # width = 4, height = 2.25, units = "in",
             device = cairo_pdf) %>%
      ggsave(., filename = here("practice", "practice_slides", "figures", paste0(plot_name, ".png")),
             # width = 4, height = 2.25, units = "in",
             type = "cairo", dpi = 300)
}

f_descr_table <- function(var) {
  workfile %>%
    summarise(mean=mean(var),
              median=median(var),
              std_dev=sd(var),
              minimum=min(var),
              maximum=max(var), 
              observations=n())
}
# Example of using the function
# f_save_plot("proj_wrd_freq", proj_wrd_freq)
```

# [GOAL OF TODAY'S PRACTICE SESSION]{.r-fit-text}

::: {style="font-size: 70%;"}
::: {style="color:#77501a"}
+ **Causal analysis**: how experimental studies uncover the association between `exposure` and `outcome`
+ **Visually explore causal pathways** and influential variables with *Directed Acyclic Graphs (DAGs)*:
  + `Collider`: a variable that is influenced by both the exposure and the outcome
  + `Confounder`: a variable that influences both the exposure and the dependent variable outcome
  + `Mediator`: a variable that lies on the causal path between the exposure and the outcome 
+ **Practically illustrate causal modeling** in the presence of influential causal variables:
  + [`Colliders` can introduce bias if conditioned upon]
<!-- , distorting the relationship by inducing spurious associations -->
  + `Confounders` must be adjusted for
<!-- , as they distort the association between exposure and outcome (source of *bias*) -->
  + `Mediators` require careful consideration in analyses
<!-- depending on the effect of interest (total vs. direct) -->
+ **Calculate commonly used estimands**: ATE, ATT, ATU

:::
:::

<!-- <br><br> -->

<!-- ::: {style="font-size: 70%;"} -->
<!-- The examples and datasets in this Lab session follow very closely two sources: -->

<!-- 1. ... -->
<!-- ::: -->


# R ENVIRONMENT SET UP & DATA

## Needed R Packages
::: {style="font-size: 85%;"}

+ We will use functions from packages `base`, `utils`, and `stats` (pre-installed and pre-loaded) 
+ We may also use the packages below (specifying `package::function` for clarity).


```{r}
# Load pckgs for this R session

# --- General 
library(here) # A Simpler Way to Find Your Files   
library(skimr)    # Compact and Flexible Summaries of Data
library(paint)   # Fancy structure for data frames 
library(janitor)  # Simple Tools for Examining and Cleaning Dirty Data
library(tidyverse) # Easily Install and Load the 'Tidyverse'
library(gt) # Easily Create Presentation-Ready Display Tables
library(marginaleffects) # Marginal Effects for Model Objects
library(WeightIt) # Weighting for Covariate Balance in Observational Studies
# --- Plotting & data visualization
library(ggfortify)     # Data Visualization Tools for Statistical Analysis Results
library(ggpubr)        # 'ggplot2' Based Publication Ready Plots
library(patchwork) # The Composer of Plots
# --- Descriptive statistics and regressions
library(broom) # Convert Statistical Objects into Tidy Tibbles
library(Hmisc) # Harrell Miscellaneous
library(estimatr) # Fast Estimators for Design-Based Inference
library(modelsummary) # Summary Tables and Plots for Statistical Models and Data:
library(kableExtra) # Construct Complex Table with 'kable' and Pipe Syntax
library(sandwich) #for robust variance estimation
library(survey) # Analysis of Complex Survey Samples
library(haven) # Import and Export 'SPSS', 'Stata' and 'SAS' Files
library(simstudy) # Simulation of Study Data
library(NHANES) # Data from the US National Health and Nutrition Examination Study  
library(mediation) # Causal Mediation Analysis
```

```{r}
#| echo: FALSE
#### ------ ERROR ------- ####
library(ggdag) # Analyze and Create Elegant Directed Acyclic Graphs #
```

:::

```{r}
#| echo: FALSE
#| message: FALSE

# Define a nice color palette from {MoMAColors}
# https://github.com/BlakeRMills/MoMAColors
clrs <- c("#9b2339", "#E7B800","#239b85", "#85239b", "#9b8523","#23399b", "#d8e600", "#0084e6","#399B23",  "#e60066" , "#00d8e6",  "#005ca1", "#e68000")

# Download Mulish from https://fonts.google.com/specimen/Mulish
theme_nice <- function() {
  theme_minimal() +
    theme(
      panel.grid.minor = element_blank(),
      plot.background = element_rect(fill = "white", color = NA),
      plot.title = element_text(face = "bold"),
      axis.title = element_text(face = "bold"),
      strip.text = element_text(face = "bold"),
      strip.background = element_rect(fill = "grey80", color = NA),
      legend.title = element_text(face = "bold")
    )
}

theme_set(theme_nice())

# update_geom_defaults("text", list(family = "Mulish", fontface = "plain"))
# update_geom_defaults("label", list(family = "Mulish", fontface = "plain"))
# update_geom_defaults(ggdag:::GeomDagText, list(family = "Mulish", fontface = "plain"))
# update_geom_defaults(ggtext::GeomRichText, list(family = "Mulish", fontface = "plain"))
```


# DATASETS for today

<!-- <br> -->

<!-- ::: {style="font-size: 80%;"} -->
<!-- In this tutorial, we will use:  -->

<!-- + .... -->

<!-- ::: -->


## [Importing Dataset 1 (NHANES)]{.r-fit-text}

::: {style="font-size: 90%;"}
**Name**: NHANES, accessible from package `NHANES`  
**Documentation**: See reference on the data downloaded with `?NHANES`  
**Sampling details**: We’ll use a subset of the NHANES dataset, focusing on variables related to smoking status (`SmokeNow`), systolic blood pressure (`BPSysAve`), Body Mass Index (`BMI`) and age (`Age`).

```{r}
set.seed(123) # Set seed for reproducibility
data(NHANES)
# Select relevant columns and drop rows with missing values
nhanes_data <- NHANES %>%
  dplyr::select(ID, Gender, Age, Race1, Height, Weight, BMI, SmokeNow, PhysActive, PhysActiveDays,
         BPSysAve, BPDiaAve, TotChol, DirectChol, Diabetes, HealthGen,
         Education, HHIncomeMid, Poverty) %>%
  drop_na() %>% 
  # make it smaller 
  slice_sample(n = 1000) # Randomly select 1000 rows using

# Take a quick look at the data
#paint(nhanes_data)
```

::: 

## [Dataset 1 (NHANES) Variables and their description]{.r-fit-text}

::: {style="font-size: 50%;"}
[EXCERPT: see complete file in Input Data Folder]{style="color:#77501a"}

```{r}
#| eval: true
#| output: true
#| echo: false

nhanes_desc <- tribble(
  ~Variable, ~ Type, ~Description,
#"X"                ,"int", "xxxx", 
"ID"               ,"int", "xxxxx", 
# "SurveyYr"         ,"chr", "yyyy_mm. Ex. 2011_12",    
"Gender"           ,"chr", "Gender (sex) of study participant coded as male or female",
"Age"              ,"int", "##", 
"AgeDecade"        ,"chr", "yy-yy es 20-29",   
# "AgeMonths"        ,"int", "### es 471", 
"Race1"            ,"chr", "Reported race of study participant: Mexican, Hispanic, White, #Black, or Other",
#"Race3"            ,"chr", "Reported race of study participant... Not availale for #2009-10", 

"Education"        ,"chr", "[>= 20 yro]. Ex. 8thGrade, 9-11thGrade, HighSchool, SomeCollege, or CollegeGrad.", 
# "MaritalStatus"    ,"chr", "[>= 20 yro]. Ex. Married, Widowed, Divorced, Separated, # NeverMarried, or LivePartner",  
"HHIncome"         ,"chr","Total annual gross income for the household in US dollars", 
"HHIncomeMid"      ,"int", "Numerical version of HHIncome derived from the middle income # in each category. Ex. 12500 40000" ,   
"Poverty"          ,"dbl", "A ratio of family income to poverty guidelines. Smaller # numbers indicate more poverty Ex.. 0.95 1.74 4.99" , 
# "HomeRooms"        ,"int", "How many rooms are in home of study participant (counting # kitchen but not bath room).", 
# "HomeOwn"          ,"chr", "One of Home, Rent, or Other", 
# "Work"             ,"chr", "NotWorking Working" ,
"Weight"           ,"dbl", "Weight in kg",
# "Length"           ,"lgl", "Recumbent length in cm. Reported for participants aged 0 - 3 years", 
# "HeadCirc"         ,"lgl", "Head circumference in cm. Reported for participants aged 0 years (0 - 6 months)", 
"Height"           ,"dbl",  "Standing height in cm. Reported for participants aged 2 years or older.",
"BMI"              ,"dbl",  "Body mass index (weight/height2 in kg/m2). Reported for participants aged 2 years or older", 
# "BMICatUnder20yrs" ,"lgl",  "Body mass index category. Reported for participants aged 2 to 19 years", 
# "BMI_WHO"          ,"chr",  "Body mass index category. Reported for participants aged 2 years or older", 
"Pulse"            ,"int",  "60 second pulse rate",
"BPSysAve"         ,"int", "Combined systolic blood pressure reading, following the # procedure outlined for BPXSAR",
"BPDiaAve"         ,"int", "Combined diastolic blood pressure reading, following the # procedure outlined for BPXDAR",
#"BPSys1"           ,"int", "Systolic blood pressure in mm Hg – first reading",
#"BPDia1"           ,"int", "Diastolic blood pressure in mm Hg – second reading (consecutive readings)",
#"BPSys2"           ,"int", "Systolic blood pressure in mm Hg – second reading (consecutive readings)",
#"BPDia2"           ,"int", "Diastolic blood pressure in mm Hg – second reading",
#"BPSys3"           ,"int", "Systolic blood pressure in mm Hg third reading (consecutive readings)",
#"BPDia3"           ,"int", "Diastolic blood pressure in mm Hg – third reading (consecutive readings)",
#"Testosterone"     ,"dbl", "Testerone total (ng/dL). Reported for participants aged 6 years or older. Not available for 2009-2010",
#
"DirectChol"       ,"dbl","Direct HDL cholesterol in mmol/L. Reported for participants aged 6 years or older", 
"TotChol"          ,"dbl","Total HDL cholesterol in mmol/L. Reported for participants aged 6 years or older", 
#"UrineVol1"        ,"int", "Urine volume in mL – first test. Reported for participants aged 6 years or older", 
#"UrineFlow1"       ,"dbl", "Urine flow rate in mL/min – first test. Reported for participants aged 6 years or older", 
#"UrineVol2"        ,"int", "Urine volume in mL – second test",
#"UrineFlow2"       ,"dbl","Urine flow rate (urine volume/time since last urination) in mL/min – second test",
"Diabetes"         ,"chr","Study participant told by a doctor or health professional that they have diabetes", 
#"DiabetesAge"      ,"int", "Age of study participant when first told they had diabetes", 
"HealthGen"        ,"chr", "Self-reported rating of health: Excellent, Vgood, Good, Fair, or Poor Fair" , 
#"DaysPhysHlthBad"  ,"int", "Self-reported # of days participant’s physical health was not good out of the past 30 days", 
#"DaysMentHlthBad " ,"int", "Self-reported # of days participant’s mental health was not good out of the past 30 days", 
#"LittleInterest"   ,"chr", "Self-reported # of days where participant had little interest in doing things. Among: None, Several, Majority, #or AlmostAll", 
#"Depressed"        ,"chr", "Self-reported # of days where participant felt down, depressed or hopeless. Among: None, Several, Majority, or #AlmostAll", 
#"nPregnancies"     ,"int", "# times participant has been pregnant",
#"nBabies"          ,"int", "# deliveries resulted in live births", 
#"PregnantNow"      ,"chr", "Pregnancy status ascertained for females 8-59 years of age", 
#
#"Age1stBaby"       ,"int",  "Age of participant at time of first live birth",
#"SleepHrsNight"    ,"int",  "Self-reported # of hours study participant gets at night on weekdays or workdays. For participants aged 16 #years and older", 
#"SleepTrouble"     ,"chr", "Participant [16 years and older] has had trouble sleeping. Coded as Yes or No." ,  
"PhysActive"       ,"chr", "Participant does moderate or vigorous-intensity sports, fitness or recreational activities (Yes or No)." ,  
#"PhysActiveDays"   ,"int", "Number of days in a typical week that participant does moderate or vigorous intensity activity. ", 
#"TVHrsDay"         ,"chr", "Number of hours per day on average participant watched TV over the past 30 days.",
#"CompHrsDay"       ,"chr", "Number of hours per day on average participant used a computer or gaming device over the past 30 day", 
#"TVHrsDayChild"    ,"lgl", "[2-11 yro] Number of hours per day on average participant watched TV over the past 30 days.",
#"CompHrsDayChild"  ,"lgl", "[2-11 yro] Number of hours per day on average participant used a computer or gaming device over the past 30 #day", 
# "Alcohol12PlusYr"  ,"chr",  "Participant has consumed at least 12 drinks of any type of alcoholic beverage in any one year", 
#"AlcoholDay"       ,"int",  "Average number of drinks consumed on days that participant drank alcoholic beverages", 
#"AlcoholYear"      ,"int",  "[>+ 18yro] Estimated number of days over the past year that participant drank alcoholic beverages", 
"SmokeNow"         ,"chr", "Study participant currently smokes cigarettes regularly. (Yes or No)",  
#"Smoke100"         ,"chr", "Study participant has smoked at least 100 cigarettes in their entire life. (Yes pr No)",  
#"Smoke100n"        ,"chr", " Smoker Non-Smoker" , 
#"SmokeAge"         ,"int", "Age study participant first started to smoke cigarettes fairly regularly", 
#"Marijuana"        ,"chr",  "Participant has tried marijuana", 
#"AgeFirstMarij"    ,"int", "Age Participant has tried marijuana first", 
#"RegularMarij"     ,"chr", "Participant has been/is a regular marijuana user (used at least once a month for a year) (Yes or No)",
#"AgeRegMarij"      ,"int", "Age of participant when first started regularly using marijuana", 
#"HardDrugs"        ,"chr", "Participant has tried cocaine, crack cocaine, heroin or methamphetamine (Yes or No)" ,
#"SexEver"          ,"chr", "Participant had had  sex (Yes or No)" ,
#"SexAge"           ,"int", "Age Participant had had sex first time" ,
#"SexNumPartnLife"  ,"int", "Number of opposite sex partners participant has had",
#"SexNumPartYear"   ,"int", "Number of opposite sex partners over the past 12 months",
#"SameSex"          ,"chr", "Participant has had any kind of sex with a same sex partne(Yes or No)" ,
#"SexOrientation"   ,"chr",  "Participant’s sexual orientation One of Heterosexual, Homosexual, Bisexual", 
"..."  ,"...",  "..."#, 
)

kableExtra::kable(nhanes_desc)
```
:::


# VISUALLY EXPLORE CAUSAL PATHWAYS WITH DAGS

::: {style="font-size: 70%;"}
+ using R packages:
  - `dagitty` for creating and analyzing DAGs
  - `ggdag` for plotting DAGs
:::

## DAG with `collider`
::: {style="font-size: 75%;"}
```{r}
#| echo: TRUE
#| eval: TRUE
#| output: TRUE
#| output-location: slide

# df DAG 
dag_collid <- ggdag::dagify( Y ~ X + e, Z ~ X + Y, 
                      exposure = "X",outcome = "Y", #latent = "e",
                      # labels
                      labels = c("Z" = "Collider",  "X" = "Exposure",
                                 "Y" = "Outcome", "e" = "Unobserved \nerror"),
                      # positions
                      coords = list(
                        x = c(X = 0, Y= 4, Z = 2 , e = 5),
                        y = c(X = 0, Y = 0, Z = 2, e = 1) 
                      )) %>% 
  ggdag::tidy_dagitty() 

# Plot DAG 
dag_col_p <-  dag_collid %>% 
  ggdag::ggdag(., layout = "circle") +  # decided in dagify
  theme_dag_blank(plot.caption = element_text(hjust = 1)) +
  # Nodes 
   ggdag::geom_dag_node(aes(color = name)) +  
  # Labels dodged to avoid overlap
   ggdag::geom_dag_label(aes(label = label), color = "#4c4c4c", nudge_x = 0.7, nudge_y = 0.2) +  
  
   ggdag::geom_dag_text(color="white") +
   ggplot2::labs(title = "Causal map with COLLIDER (Z)" , 
       #subtitle = "X = exposure, Y = outcome, Z = collider, e = random error", 
       caption = ) +
  # Map colors to specific nodes
   ggplot2::scale_color_manual(values = c("X" = "#9b6723", "Y" = "#72aed8", "Z" = "#d02e4c",
                                "e" = "#A6A6A6"), 
                     guide = "none")    # Remove legend

dag_col_p
```
:::

```{r}
#| echo: FALSE
f_save_plot("dag_col_p", dag_col_p)
```


## DAG with `confounder`  
::: {style="font-size: 75%;"}
```{r}
#| echo: TRUE
#| eval: TRUE
#| output: TRUE
#| output-location: slide

# df DAG 
dag_confounder <- ggdag::dagify(Y ~ X + Z + e, X ~  Z, 
                                exposure = "X", outcome = "Y", #latent = "e",
                                # labels
                                labels = c(
                                  "Z" = "Confounder",
                                  "X" = "Exposure",
                                  "Y" = "Outcome",
                                  "e" = "Unobserved \nerror"),
                                # positions
                                coords = list(
                                  x = c(X = 0, Y= 4, Z = 2 , e = 5),
                                  y = c(X = 0, Y = 0, Z = 2, e = 1) 
                                )) %>% 
  ggdag::tidy_dagitty()     # Add edge_type within pipe

# Plot DAG 
dag_conf_p <- dag_confounder %>% 
  ggdag::ggdag(., layout = "circle") + 
  ggdag::theme_dag_blank(plot.caption = element_text(hjust = 1)) +
  # Nodes 
  ggdag::geom_dag_node(aes(color = name)) +  
  # Labels dodged to avoid overlap
  ggdag::geom_dag_label(aes(label = label), color = "#4c4c4c", nudge_x = 0.7, nudge_y = 0.2) +  
  ggdag::geom_dag_text(color="white") +
  ggplot2::labs(title = "Causal map with CONFOUNDER (Z)" , #subtitle = " ",
        caption = ) +
  # Map colors to specific nodes
  ggplot2::scale_color_manual(values = c("X" = "#9b6723", "Y" = "#72aed8", "Z" = "#d02e4c",
                                "e" = "#A6A6A6"), 
                     guide = "none")   
dag_conf_p
```

:::

```{r}
#| echo: FALSE
f_save_plot("dag_conf_p", dag_conf_p)
```


## DAG with `mediator`
::: {style="font-size: 75%;"}
```{r}
#| echo: TRUE
#| eval: TRUE
#| output: TRUE
#| output-location: slide

# df DAG 
dag_med <- ggdag::dagify( Y ~ Z + e,  Z ~ X, exposure = "X", outcome = "Y",  #latent = "e",
                   # labels
                   labels = c(
                     "Z" = "Mediator",
                     "X" = "Exposure",
                     "Y" = "Outcome",
                     "e" = "Unobserved \nerror"),
                   # positions
                   coords = list(
                     x = c(X = 0, Y= 4, Z = 2 , e = 5),
                     y = c(X = 0, Y = 0, Z = 2, e = 1) 
                   )) %>% 
  ggdag::tidy_dagitty()     # Add edge_type within pipe

# Plot DAG 
dag_med_p <-  dag_med %>% 
  ggdag::ggdag(., layout = "circle") +  # decided in dagify
  ggdag::theme_dag_blank(plot.caption = element_text(hjust = 1)) +
  # Nodes 
  ggdag::geom_dag_node(aes(color = name)) +  
  # Labels dodged to avoid overlap
  ggdag::geom_dag_label(aes(label = label), color = "#4c4c4c", nudge_x = 0.7, nudge_y = 0.2) +  
  
  ggdag::geom_dag_text(color="white") +
  ggplot2::labs(title = "Causal map with MEDIATOR (Z)" , 
       #subtitle = "X = exposure, Y = outcome, Z = collider, e = random error", 
       caption = ) +
  # Map colors to specific nodes
  ggplot2::scale_color_manual(values = c("X" = "#9b6723", "Y" = "#72aed8", "Z" = "#d02e4c",
                                "e" = "#A6A6A6"), guide = "none")    # Remove legend
dag_med_p
```
:::

```{r}
#| echo: FALSE
f_save_plot("dag_med_p", dag_med_p)
```

 
 
# CAUSAL MODELING WITH `CONFOUNDER`
<!-- https://bookdown.org/jbrophy115/bookdown-clinepi/confounding.html -->

## DAG with `confounder`  

:::: {.columns}
::: {.column width="30%"}
Z = `Age` = confounder  
X = `SmokeNow`  
Y = `BPSysAve` (blood pressure)  
 
:::
::: {.column width="70%"}

```{r}
#| echo: FALSE
#| eval: TRUE
#| output: TRUE

# df DAG 
dag_conf_p
```
:::
  
::::


## Example of CONFOUNDER
+ Z = `Age` = confounder for the relationship between X = `SmokeNow` and Y = `BPSysAve` (blood pressure)  
```{r}
data(NHANES)
# Select relevant columns and drop rows with missing values
nhanes_conf <- NHANES %>%
  dplyr::select(ID, Age, SmokeNow, BPSysAve) %>%
  tidyr::drop_na()
  
# Take a quick look at the data
paint::paint(nhanes_conf)
```


In this context:

+ `Age` influences both smoking (`SmokeNow`) and blood pressure (`BPSysAve`), making it a *confounder.*
+ `SmokeNow` directly affects `BPSysAve.`

## Visualisation of CONFOUNDER

```{r}
#| output-location: slide 

# Scatterplot of Age and Blood Pressure by Smoking Status
ggplot2::ggplot(nhanes_conf, aes(x = Age, y = BPSysAve, color = SmokeNow)) +
  geom_point(alpha = 0.6) +
  # linear rel 
  geom_smooth(method = "lm", se = FALSE,  size = 1.5,  linetype = "dashed", color = "black") +
  scale_color_manual(
    values = c("No" = "#1b9e77", "Yes" = "#d95f02")) +
  facet_wrap(~ SmokeNow) + 
  labs(
    title = "Scatterplot of Age and Blood Pressure by Smoking Status",
    x = "Age",
    y = "Blood Pressure (mmHg)",
    color = "Smokers"
  )

```

# [ONE WAY OF DEALING WITH CONFOUNDERS]{.smaller}
 <!-- https://tilburgsciencehub.com/topics/analyze/regression/linear-regression/mediation-analysis/ -->

+ introducing the `confounder variable` as a term in the regression model to `control for` its effect on the outcome.

<br><br>

::: aside
[As discussed in Lecture #4 there  are several other approaches...]
:::  


## [Regression analysis: `controlling for` the confounder]{.r-fit-text}

**Unadjusted model**:
```{r}
# Unadjusted linear model 
model_unadjusted <- lm(BPSysAve ~ SmokeNow, data = nhanes_conf)
summary(model_unadjusted)$coefficients
```

**Adjusted model**:

  + includes the confounder `Age` in the model
```{r}
# Adjusted model
model_adjusted <- lm(BPSysAve ~ SmokeNow + Age, data = nhanes_conf)
summary(model_adjusted)$coefficients
```

## [Compare models (without and with `confounder`)]{.r-fit-text}
::: {style="font-size: 65%;"}
+ In the **Unadjusted Model** any observed relationship between smoking and blood pressure might be confounded.
+ In the **Adjusted Model** (which *'controls for' `Age`*) a more accurate estimate of the causal effect of smoking (`SmokeNowYes`) on blood pressure (`BPSysAve`) accounts for the confounding influence of `Age`.

```{r}
#| output-location: column

# Create the table with a custom statistic formatter
conf_sum <- modelsummary::msummary(
  list(
    "NO Confounder" = model_unadjusted, 
    "Confounder" = model_adjusted
  ),
  output = "gt",
  statistic = c(
    "conf.int",
    "s.e. = {std.error}"
  ), 
  fmt = "%.3f", 
  gof_omit = 'DF|Deviance|Log.Lik.|F|R2 Adj.|AIC|BIC|RMSE',
  stars = c('*' = .05, '**' = .01)
)

# Render the table directly
conf_sum  %>%    # text and background color
  tab_style(
    style = cell_text(weight = "bold", color = "#005ca1"),
    locations = cells_column_labels(
      columns = c("NO Confounder", "Confounder"))) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_body(rows = c(1,4,7))) %>% 
  tab_style(style = cell_fill(color = 'lightblue'),
            locations = cells_body(rows = 4:5)) %>% 
  # Make 'Age' font color red
  tab_style(style = cell_text(color = "#d02e4c"),
    locations = cells_body(rows = c(7,8,9))
  )
```
:::

## [Compare predicted values from 2 models]{.r-fit-text}
::: {style="font-size: 80%;"}
+ With `tidyr::pivot_longer()` we reshape the dataset so we can plot the predicted values from both models in a faceted plot.

```{r}
# Add predicted values from the unadjusted and adjusted models
nhanes_conf <- nhanes_conf %>%
  dplyr::mutate(
    pred_unadjusted = predict(model_unadjusted),  # Predicted BPSysAve from unadjusted model
    pred_adjusted = predict(model_adjusted)       # Predicted BPSysAve from adjusted model
  )

# Reshape the data into long format using pivot_longer()
nhanes_long <- nhanes_conf %>%
  tidyr::pivot_longer(cols = c(pred_unadjusted, pred_adjusted), 
               names_to = "model", values_to = "predicted") %>%
  dplyr::mutate(model = recode(model, 
                        pred_unadjusted = "Unadjusted: SmokeNow on BPSysAve", 
                        pred_adjusted = "Adjusted: SmokeNow + Age on BPSysAve")) %>% 
  #Reorder the 'model' factor to change the order of the facets
  dplyr::mutate(model = factor(
   model,   levels = c("Unadjusted: SmokeNow on BPSysAve", "Adjusted: SmokeNow + Age on BPSysAve")
))
```

+ check the df new size
```{r}
dim(nhanes_conf)
dim(nhanes_long)
```

:::

## [Plot predicted values from 2 models]{.r-fit-text}
::: {style="font-size: 80%;"}
<!-- https://quantifyinghealth.com/confounding-example/ -->

+ Using `nhanes_long` df in "long shape" 
```{r}
#| label: fig-pred_conf
#| output-location: slide 
#| fig-cap: "As age causes high blood pressure, but also determines smoking status, the Adjusted model (*right*) gives us a more credible relationship between smoking and blood pressure."  
#| fig-cap-location: bottom

# Violin plot with dashed line connecting the two conditions
ggplot(nhanes_long, aes(x = factor(SmokeNow), y = BPSysAve, fill = model)) +
  # Create the violin plot to show the distribution of blood pressure
  geom_point(color = "grey", alpha = 0.4, position = position_dodge(width = 0.3) ) +
  # Overlay the predicted dashed line between the two smoking conditions
  geom_line(aes(y = predicted, group = model, color = model), 
            size = 0.8, linetype = "dashed", position = position_dodge(width = 0.3)) +
  # Facet vertically for unadjusted and adjusted models
  facet_wrap(model ~ ., scales = "free_y",ncol = 2) +
  # Add labels and title
  labs(title = "Confounder Analysis: Predicted values in Unadjusted vs Adjusted Regression models",
       subtitle = "Age = Confounder",
       x = "Smoking Status",
       y = "Systolic Blood Pressure (BPSysAve)",
       color = "Model",
       fill = "Model"
       ) +
  # Customize colors for better contrast
  scale_fill_manual(values = c("Unadjusted: SmokeNow on BPSysAve" ="lightcoral" , 
                               "Adjusted: SmokeNow + Age on BPSysAve" = "lightblue")) +
  scale_color_manual(values = c("Unadjusted: SmokeNow on BPSysAve" = "red", 
                                "Adjusted: SmokeNow + Age on BPSysAve" = "blue")) +
  # Minimal theme for clarity
  theme_minimal()+
  theme(legend.position = "none")
```
:::

 
# CAUSAL MODELING WITH `MEDIATOR`
<!-- https://tilburgsciencehub.com/topics/analyze/regression/linear-regression/mediation-analysis/ -->


## DAG with `mediator`  

:::: {.columns}

::: {.column width="30%"}

M = `BMI` is a **mediator**   
X = `PhysActiveDays`  
Y = `BPSysAve` (blood pressure)  
:::

::: {.column width="70%"}

```{r}
#| echo: FALSE
#| eval: TRUE
#| output: TRUE

# df DAG 
dag_med_p
```
:::
  
::::


# [The case of a mediator]{.r-fit-text}
+ M = `BMI` is a **mediator** for the effect of X = `PhysActiveDays` on Y = `BPSysAve`
     
```{r}
data(NHANES)
# Select relevant columns and drop rows with missing values
nhanes_med <- NHANES %>%
  dplyr::select(Gender, Age, BPSysAve, BMI, PhysActiveDays, Diabetes, SmokeNow) %>%
  drop_na()

# Take a quick look at the data
summary(nhanes_med)
```

## [Fitting unadjusted (total) model]{.r-fit-text}
::: {style="font-size: 80%;"}
Before adjusting for any mediator, we **fit a simple linear model to estimate the total effect** of `PhysActiveDays` on `Systolic Blood Pressure` (disregarding any possible mediation of `BMI`).

+ `Total Effect Model (Unadjusted)`
  + This model gives the total effect of of `PhysActiveDays` on `Systolic Blood Pressure` (including any *indirect* effects through M = `BMI` or other variables that haven't been included.)

```{r}
# Unadjusted model: total effect of smoking on blood pressure
total_effect_model <- lm(BPSysAve ~ PhysActiveDays, data = nhanes_med)
summary(total_effect_model)$coefficients
```

:::


## [Set up the mediation models 1/2]{.r-fit-text}
::: {style="font-size: 90%;"}

Then, we fit the model to estimate the effect of X = `PhysActiveDays` on M = `BMI`:
 
+ `Mediator model`
  + This model allows us to see whether more **physically active days** are associated with **(lower) BMI** values (which could *then* affect **blood pressure**).

```{r}
# Mediator model: SmokeNow affects BMI
mediator_model <- lm(BMI ~ PhysActiveDays, data = nhanes_med)
summary(mediator_model)$coefficients
```
:::

## [Set up the mediation models 2/2]{.r-fit-text}
::: {style="font-size: 90%;"}
Lastly, we fit the model to estimate the effect of X = `PhysActiveDays` on Y = `BPSysAve` while adjusting for M = `BMI`:

+ `Outcome Model (Adjusted for BMI)`
   + This model estimates the effect of `PhysActiveDays` and `BMI` on Systolic Blood Pressure (`BPSysAve`). This is the *adjusted model*.

```{r}
# Outcome model: PhysActiveDays and BMI affect BPSysAve
outcome_model <- lm(BPSysAve ~  PhysActiveDays + BMI, data = nhanes_med)
summary(outcome_model)$coefficients
```
:::


## [Compare 3 models]{.smaller}
::: {style="font-size: 70%;"}

+ The `Total (unadjusted) effect model` estimates the effect of `PhysActiveDays` on `BPSysAve`. 
+ The `Mediator model` estimates the effect of `PhysActiveDays` on `BMI` (M). 
+ The `Outcome model estimates` the effect of (`PhysActiveDays` + `BMI`) on BPSysAve.
```{r}
#| echo: TRUE
#| eval: TRUE
#| output: TRUE
#| output-location: slide

med_sum <- modelsummary::msummary(
  list("BPSysAve ~ Total Effect" = total_effect_model,
       "BMI ~ Mediator Effect" = mediator_model,
       "BPSysAve ~ Outcome" = outcome_model), 
  output = "gt",
  statistic = c(
    "conf.int",
    "s.e. ={std.error}"),
  fmt = "%.3f", # format
  gof_omit = 'DF|Deviance|Log.Lik.|F|R2 Adj.|AIC|BIC|RMSE',
  stars = c('*' = .05, '**' = .01))

# Render the table
med_sum %>% 
  tab_spanner(label = "Tot (unadj) Mod.",columns = 2) %>%
  tab_spanner(label = "Med Mod.", columns = 3) %>%
  tab_spanner(label = "Outcome Mod.",columns = 4) %>%
   tab_style(
    style = cell_text(weight = "bold", color = "#7f173d"),
    locations = cells_column_labels(columns = 3)) %>% 
  tab_style(
    style = cell_text(weight = "bold", color = "#005ca1"),
    locations = cells_column_labels(columns = c(2,4))) %>% 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_body(rows = c(1,4,7))) %>% 
  # Highlight X 
   tab_style(style = cell_fill(color = 'lightblue'),
            locations = cells_body(rows = 4:6)) %>% 
  # Make 'MEdiator' font color red
  tab_style(style = cell_text(color = "#d02e4c"),
    locations = cells_body(rows = 7:9)) 
```
:::

## [Calculate the Indirect, Direct, and Total Effects (1/2)]{.r-fit-text}
Using the coefficients from the models, we can calculate the mediation effects manually.

+ **Direct Effect**: This is the coefficient of `PhysActiveDays` in the outcome model, which gives the direct effect of exercise on blood pressure (*controlling* for `BMI` = M)
+ **Indirect Effect**: This is the product of the coefficient from the mediator model (`PhysActiveDays` → `BMI`) and the coefficient from the outcome model (`BMI` → `BPSysAve`).
+ **Total Effect**: This is the coefficient of `PhysActiveDays` in the unadjusted model (*NOT controlling* for `BMI` = M).

```{r}
#| echo: FALSE
#| output: FALSE

# Check the names of the coefficients in models...
names(coef(mediator_model))     # [1] BMI ~ PhysActiveDays 
names(coef(outcome_model))      # [1] BPSysAve ~  PhysActiveDays + BMI    
names(coef(total_effect_model)) # [1] BPSysAve ~ PhysActiveDays
```

## [Calculate the Indirect, Direct, and Total Effects (2/2)]{.r-fit-text}

::: {style="font-size: 85%;"}
Breakdown of the estimated effects:
```{r}
#| output-location: default

# TOTAL effect: The effect of PhysActiveDays on BPSysAve without adjusting for BMI
total_effect <- coef(total_effect_model)["PhysActiveDays"]# 0.59
total_effect
# DIRECT effect: The effect of PhysActiveDays on BPSysAve after adjusting for BMI.
direct_effect <- coef(outcome_model)["PhysActiveDays"]# 0.621 
direct_effect
# Indirect effect: The portion of the effect on BPSysAve that is mediated through BMI
indirect_effect <- coef(mediator_model)["PhysActiveDays"] * coef(outcome_model)["BMI"] # [-0.0821 X 0.382]  
indirect_effect
# Proportion mediated: The proportion of the total effect that is mediated through BMI
proportion_mediated <- glue::glue("{round(indirect_effect / total_effect *100, 2)}%")
proportion_mediated #  -0.0531
```
:::


## [Visualise the Indirect, Direct, and Total Effects]{.r-fit-text}

<!-- "+ Physical Activity" -> "+ Systolic Blood Pressure (BPSysAve)" | "+ BMI -> - BPSysAve " -->
<!-- WTF ???  -->

```{r}
#| output-location: slide

# Create a data frame for the effects
effects_df <- data.frame(
  Effect = c("Total Effect", "Direct Effect", 
             "Indirect Effect"),
  Value = c(total_effect, direct_effect, 
            indirect_effect)
)

# Create the bar plot
ggplot(effects_df, aes(x = Effect, y = Value,
                       fill = Effect)) +
  geom_bar(stat = "identity") +
  labs(title = "Mediation Analysis: Total, Direct, and Indirect Effects", 
       subtitle = "Effect (coefficient) of Physical Activity on Systolic Blood Pressure",
       y = "", x = "") +
  theme_minimal()
```

## [Interpreting the results ]{.r-fit-text}

+ The **total effect** tells us the overall relationship between `PhysActiveDays` and `BPSysAve`.

+ The **direct effect** represents the relationship between `PhysActiveDays` and `BPSysAve`, *controlling for* `BMI`.

+ The **indirect effect** (mediated effect) shows how much of the relationship between `PhysActiveDays` and `BPSysAve` is explained through `BMI` (AKA the coef of `PhysActiveDays` in the mediator model times the coef of `BMI` in the outcome model)

+ The **proportion mediated** indicates how much of the total effect is due to the mediation by BMI.

# [Causal mediation analysis using `mediation`]{.smaller}

<br><br>

::: aside
[This can be a handy R package to use...]
:::  
## [Using `mediation` package]{.r-fit-text}

:::: {style="font-size: 75%;"}
The `mediation` package can be used to estimate various quantities for causal mediation analysis

+ The function `mediate()` needs two regression models: 1) $(X → M)$, and 2) $(X + M → Y)$
+ It returns
  + the average causal mediation effect (`ACME`), 
  + average direct effect (`ADE`), 
  + and `total effect`.
 
```{r}
# recall
#mediator_model[["call"]][["formula"]]
#outcome_model[["call"]][["formula"]]

# Calculate the mediation effect
mediation_model <- mediate(mediator_model, outcome_model, 
                           treat = "PhysActiveDays", 
                           mediator = "BMI", 
                           boot=TRUE, sims=500)

summary(mediation_model)$d1  # Direct effect
summary(mediation_model)$z1  # Indirect effect
summary(mediation_model)$tau.coef  # Total effect
```
::::

## [Using `mediation` pckg - results]{.r-fit-text}

```{r}
summary(mediation_model)
```

<!-- |               | Estimate    | 95% CI Lower | 95% CI Upper | p-value | WHAT IT IS                     | -->
<!-- |---------------|-------------|--------------|--------------|---------|--------------------------------| -->
<!-- |ACME           |  -0.0313    |   -0.1024    |   0.04       | 0.324   | = indirect or mediation effect | -->
<!-- |ADE            |   0.6213    |    0.1479    |   1.16       | 0.024 * | = direct effect                | -->
<!-- |Total Effect   |   0.5899    |    0.1354    |   1.15       | 0.020 * | = total effect                 | -->
<!-- |Prop. Mediated |  -0.0531    |   -0.2969    |   0.10       | 0.344   | = proportion mediated          | -->


## [Using `mediation` pckg - prediction]{.r-fit-text}

:::: {style="font-size: 85%;"}
```{r}
# Add predicted values for BMI, BPSysAve (adjusted), and BPSysAve (total effect)
nhanes_med_pred <- nhanes_med %>%
  mutate(
    pred_bmi = predict(mediator_model),         # Predicted BMI (mediator model)
    pred_bps_adj = predict(outcome_model),      # Predicted BPSysAve (adjusted for Age)
    pred_bps_total = predict(total_effect_model) # Predicted BPSysAve (total effect)
  )

nhanes_med_pred[1:3, c(1:2, 8:10)]
```
::::

## [Plot prediction results 1/2]{.r-fit-text}

Now, let's create a plot that includes:

+ The `total effect` of BMI on blood pressure (without adjusting for Age).
+ The `adjusted effect` of BMI on blood pressure (controlling for Age).
+ The `mediator effect` (BMI's effect on Age).

```{r}
# Check column names
colnames(nhanes_med_pred)

# Reshape the data into long format for faceting
nhanes_long <- nhanes_med_pred %>%
  gather(key = "model", value = "predicted",  pred_bps_adj, pred_bps_total) %>%
  mutate(model = recode(model, 
                        #pred_bmi = "Mediator Effect: BPSysAve on BMI", 
                        pred_bps_adj = "Adj. Effect: PhysActiveDays + BMI on BPSysAve", 
                        pred_bps_total = "Total Effect: PhysActiveDays on BPSysAve"))
```


## [Plot prediction results 2/2]{.r-fit-text}

```{r}
#| output-location: slide 

# Plot with vertically aligned facets
ggplot(nhanes_long, aes(x = BMI)) +
  # Actual data points for BPSysAve
  geom_point(aes(y = BPSysAve), color = "black", shape = 16, alpha = 0.5) +  
  # Predicted values from different models
  geom_line(aes(y = predicted, color = model), size = 1) +  
  # Facet vertically
  facet_grid(model ~ ., scales = "free_y") +  
  labs(title = "Mediation Analysis: Total, Adjusted, and Mediator Effects",
       x = "BMI",
       y = "Blood Pressure | Age",
       color = "Effect Type") +
  theme_minimal()


```


# DEFINING POPULAR CAUSAL OUTCOME EFFECTS 


# [CALCULATE COMMONLY USED ESTIMANDs (ATE, ATT, ATU)]{.smaller}

<!-- ESTIMANDS  -->

<br><br>

::: {style="font-size: 70%;"}
The explanation and examples below follow very closely two sources:

1. [Noah Greifer, Elizabeth A. Stuart, *Choosing the Causal Estimand for Propensity Score Analysis of Observational Studies*](https://arxiv.org/abs/2106.10577)
2. [Andrew Heiss, *Demystifying causal inference estimands: ATE, ATT, and ATU*](https://www.andrewheiss.com/blog/2024/03/21/demystifying-ate-att-atu/)

<!-- https://github.com/andrewheiss/ath-quarto/blob/main/blog/2024/03/21/demystifying-ate-att-atu/index.qmd -->
:::

<!-- COPY FROM https://www.andrewheiss.com/blog/2024/03/21/demystifying-ate-att-atu/ -->
## [Establishing some common symbols]{.r-fit-text}

+ $X$ = treatment or intervention
+ $Y^1$ = potential outcome if treated
+ $Y^0$ = potential outcome if not treated
+ $\delta$ = difference $(Y^1 - Y^0)$, or the individual-level causal effect.
 
## [EXAMPLE with toy case]{.r-fit-text}
Assuming we could observe the `potential outcomes` for each individual:
```{r}
basic_po <- tribble(
  ~id, ~age,    ~treated, ~outcome_1, ~outcome_0,
  1,   "Old",   1,        80,         60,
  2,   "Old",   1,        75,         70,
  3,   "Old",   1,        85,         80,
  4,   "Old",   0,        70,         60,
  5,   "Young", 1,        75,         70,
  6,   "Young", 0,        80,         80,
  7,   "Young", 0,        90,         100,
  8,   "Young", 0,        85,         80
) |> 
  dplyr::mutate(
    ice = outcome_1 - outcome_0,
    outcome = ifelse(treated == 1, outcome_1, outcome_0)
  )
```

## [ITE in toy example example (*all* outcomes!)]{.r-fit-text}

::: {style="font-size: 70%;"}
+ Each person (`ID`) has `two` ***potential*** outcomes and an `individual causal effect`  ($ITE_i= Y_{i}^1  − Y_{i}^0$ = $\delta_i$).
+ $\delta_i$ would in fact be measurable only with 2 *parallel universes*!
:::

```{r}
#| label: tbl-basic-po
#| tbl-cap: ""
#| echo: FALSE
#| classes: no-stripe

basic_po <- tribble(
  ~id, ~age,    ~treated, ~outcome_1, ~outcome_0,
  1,   "Old",   1,        80,         60,
  2,   "Old",   1,        75,         70,
  3,   "Old",   1,        85,         80,
  4,   "Old",   0,        70,         60,
  5,   "Young", 1,        75,         70,
  6,   "Young", 0,        80,         80,
  7,   "Young", 0,        90,         100,
  8,   "Young", 0,        85,         80
) |> 
  dplyr::mutate(
    ice = outcome_1 - outcome_0,
    outcome = ifelse(treated == 1, outcome_1, outcome_0)
  )

# FORMAT TABLE 
basic_po |> 
  dplyr::select(
    id, age, treated, outcome_1, outcome_0, ice, outcome) |> 
  gt() |> 
  sub_missing(missing_text = "…") |>
  fmt_number(
    columns = c(starts_with("outcome"), ice),
    decimals = 0) |> 

  # Column labels
  cols_label(
    id = "ID",
    age = md("$$Z_i$$"),
    treated = md("$$X_i$$"),
    outcome_0 = md("$$Y^0_i$$"),
    outcome_1 = md("$$Y^1_i$$"),
    outcome = md("$$Y_i$$"),
    ice = md("$$Y^1_i - Y^0_i$$")) |>
  
  # Level 1 spanner labels
  tab_spanner(
    label = "Age", columns = age, 
    level = 1, id = "level1_a_po") |> 
  tab_spanner(
    label = "Treated", columns = treated, 
    level = 1, id = "level1_b_po") |> 
  tab_spanner(
    label = "Potential outcomes",
    columns = c(outcome_1, outcome_0),
    level = 1, id = "level1_c_po") |> 
  tab_spanner(
    label = "ITE or \\(\\delta_i\\)", 
    #label = "ITE", 
  columns = ice, 
    level = 1, id = "level1_d_po") |> 
  tab_spanner(
    label = "Outcome", columns = outcome, 
    level = 1, id = "level1_e_po") |> 
  
  # Level 2 spanner labels
  tab_spanner(
    label = "Confounder",
    columns = age,
    level = 2, id = "level2_a_po") |> 
  tab_spanner(
    label = "Treatment", columns = treated, 
    level = 2, id = "level2_b_po") |> 
  tab_spanner(
    label = "Unobservable",
    columns = c(outcome_1, outcome_0, ice), 
    level = 2, id = "level2_c_po") |> 
  tab_spanner(
    label = "Realized", columns = outcome, 
    level = 2, id = "level2_d_po") |> 
  
  # Style stuff
  tab_style(
    style = cell_text(align = "center"),
    locations = cells_column_labels()) |> 
  tab_style(
    style = cell_text(align = "center"),
    locations = cells_body()) |> 
  tab_style(
    style = cell_text(weight = "bold"),
    locations = list(
      cells_column_spanners(spanners = starts_with("level1")),
      cells_column_labels(columns = "id")
    )) |> 
  tab_style(
    style = cell_text(style = "italic"),
    locations = cells_column_spanners(spanners = starts_with("level2"))) |> 
  tab_style(
    style = list(
      cell_fill(color = clrs[2], alpha = 0.5)),
    locations = cells_body(rows = treated == 1)) |> 
  # tab_footnote(
  #   footnote = "ITE = individual causal effect",
  #   locations = cells_column_spanners(spanners = "level1_d_po")) |> 
  opt_footnote_marks(marks = "standard") |> 
  opt_horizontal_padding(scale = 3)
```


## [ATE  = Average Treatment Effect]{.r-fit-text}

If we could compare all the same people in different universes and measure their ITE, we could calculate the **Average Treatment Effect** (`ATE`), or the effect of the intervention across the whole population. 

<br>
<!-- Officially, the ATE is the average of the $\delta$ column, or the average of $Y^1 - Y^0$: -->

$$
\begin{aligned}
\text{ATE} &= E[\delta_i] & \text{ or} \\
\text{ATE} &= E[Y^1_i - Y^0_i]
\end{aligned}
$$

Given the data of the $\delta$ column in @tbl-basic-po, the ATE is 5.

$$
\text{ATE} = \frac{20 + 5 + 5 + 5 + 10 + 0 + -10 + 5}{8} = 5
$$

```{r}
#| echo: false
#| eval: false

# ATE upon stratification by Age
(4/8*(20)) + (4/8*(-11.667))
```

## [ATT = Average Treatment Effect on Treated]{.r-fit-text}

We might want to know how big the effect is just for those who received the treatment.   

This is called the **Average Treatment effect on the Treated** (`ATT`), and is the average of the individual causal effects *just among those who were treated*.

$$
\begin{aligned}
\text{ATT} &= E[\delta_i \mid X_i = 1] & \text{or} \\
\text{ATT} &= E[Y^1_i - Y^0_i \mid X_i = 1]
\end{aligned}
$$

In this case, that means we're only looking at the average $\delta$ for rows 1, 2, 3, and 5 in @tbl-basic-po:

$$
\text{ATT} = \frac{20 + 5 + 5 + 5}{4} = 8.75
$$ 


## [ATU = Average Treatment Effect on Untreated]{.r-fit-text}
We can also calculate the **Average Treatment effect on the Untreated** (`ATU`; sometimes called the ATC (for effect on the control group)) by finding the average of the individual causal effects *among those who were not treated*.

$$
\begin{aligned}
\text{ATU} &= E[\delta_i \mid X_i = 0] & \text{or} \\
\text{ATU} &= E[Y^1_i - Y^0_i \mid X_i = 0]
\end{aligned}
$$

Here, we're only looking at the average $\delta$ for rows 4, 6, 7, and 8 in @tbl-basic-po:

$$
\text{ATU} = \frac{10 + 0 - 10 + 5}{4} = 1.25
$$


## [Relation among ATE, ATT and ATU]{.r-fit-text}
In fact, the `ATE` is technically a *weighted average* of the `ATT` and the `ATU` (here $\pi$ indicates "proportion"):

$$
\text{ATE} = (\pi_\text{Treated} \times \text{ATT}) + (\pi_\text{Untreated} \times \text{ATU})
$$

In our example, @tbl-basic-po, we can get the same ATE:

$$
\begin{aligned}
\text{ATE} &= (\frac{4}{8} \times 8.75) + (\frac{4}{8} \times 1.25) \\
&= 4.375 + 0.625 \\
&= 5
\end{aligned}
$$

> Decomposing the ATE into these two parts like this shows that there's some systematic difference between the treated and untreated people. This difference is called *selection bias*.


<!-- # ALTRO ESEMPIO MOSQUITO NETS -->
<!-- Qui volendo si poteva anche fare un esempio con 2 confounders  -->

<!-- vedi andrew Heiss [https://www.andrewheiss.com/blog/2024/03/21/demystifying-ate-att-atu/#moving-beyond-the-ate](https://www.andrewheiss.com/blog/2024/03/21/demystifying-ate-att-atu/#moving-beyond-the-ate) 

che usa it dati qui `_EXTRA_gabors/mosquito_nets_v2.csv` -->


## [Relation among ATE, ATT and ATU]{.r-fit-text}

We can see the selection bias in an alternative decomposition of the ATE:

$$
\text{ATE} = \text{ATT} + \text{Selection bias}
$$

> The fact that the ATT (8.75) is bigger than the ATE (5) here is a sign the two groups are different. This intervention, whatever it is, has a big effect on the treated people who signed up for it, likely because they somehow knew that the intervention would be helpful for them. 

> Those who were untreated have a really low ATU (1.25)—they likely didn't sign up for the intervention because they knew that it wouldn't do much for them.


## [Relation among ATE, ATT and ATU (R)]{.r-fit-text}

```{r}
# OBTAIN ATT, ATU
effect_types <- basic_po |> 
  dplyr::group_by(treated) |> 
  dplyr::summarize(effect = mean(ice), n = n() ) |> 
  dplyr::mutate(prop = n / sum(n),
    weighted_effect = effect * prop) |> 
  dplyr::mutate(estimand = case_match(treated, 0 ~ "ATU", 1 ~ "ATT"), .before = 1)

effect_types

# OBTAIN ATE
effect_types |> dplyr::summarize(ATE = sum(weighted_effect))
```



<!-- ## [ITE = Simulation]{.r-fit-text} -->



<!-- ```{r} -->
<!-- def <- simstudy::defData(varname = "C", formula = 0.4, dist = "binary") -->
<!-- def <- simstudy::defData(def, "X", formula = "0.3 + 0.4 * C", dist = "binary") -->
<!-- def <- simstudy::defData(def, "e", formula = 0, variance = 2, dist = "normal") -->
<!-- def <- simstudy::defData(def, "Y0", formula = "2 * C + e", dist="nonrandom") -->
<!-- def <- simstudy::defData(def, "Y1", formula = "1 + 2 * C + e", dist="nonrandom") -->
<!-- def <- simstudy::defData(def, "Y_obs", formula = "Y0 + (Y1 - Y0) * X", dist = "nonrandom") #  = Y1*X + (1-X)*Y0 -->

<!-- set.seed(2017) -->
<!-- dt <- genData(10000, def) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- paste0("Calculated mean causal effect = ", mean(dt[, Y1] - dt[, Y0])) #mean difference of counterfactual outcomes -->
<!-- paste0("Calculated observed difference  = ", round(dt[X == 1, mean(Y_obs)] - dt[X == 0, mean(Y_obs)],2)) -->

<!-- lm1 <- lm(Y_obs ~ X, data = dt) -->
<!-- tidy(lm1) -->
<!-- ``` -->



<!-- ## [References]{.r-fit-text} -->
<!-- + Equitable Equations !!!!! -->
<!-- + https://www.andrewheiss.com/blog/2024/03/21/demystifying-ate-att-atu/ -->
<!-- + https://forloopsandpiepkicks.wordpress.com/2022/01/05/simple-examples-to-understand-what-confounders-colliders-mediators-and-moderators-are-and-how-to-control-for-variables-in-r-with-regression-and-propensity-score-matching/ -->


<!-- ## Final thoughts -->

<!-- ::: {style="font-size: 95%;"} -->
<!-- ::: {style="color:#77501a"} -->


<!-- + ..... -->

<!-- ::: -->

<!-- ::: -->



